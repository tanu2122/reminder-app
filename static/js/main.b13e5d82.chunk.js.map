{"version":3,"sources":["components/Form.js","components/Task.js","components/TaskList.js","components/Timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["toast","configure","Form","inputText","setInputText","inputTime","setInputTime","todos","setTodos","time","currentTime","task","setInterval","now","Date","hour","getHours","minute","getMinutes","second","getSeconds","toString","length","getDateTime","type","autoClose","pauseOnHover","className","value","onChange","e","target","placeholder","id","name","step","onClick","preventDefault","text","Time","completed","Math","random","Task","filter","el","TaskList","filterTodos","map","Timer","state","this","clock","Set_Current_Time","setState","toLocaleTimeString","hour12","React","Component","App","useState","status","setStatus","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13e5d82.chunk.js","sourcesContent":["import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\n\r\nconst Form = ({inputText, setInputText, inputTime, setInputTime, todos, setTodos, currentTime, time, task}) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };    \r\n\r\n    function getDateTime() {\r\n        var now = new Date();\r\n        var hour    = now.getHours();\r\n        var minute  = now.getMinutes();\r\n        var second  = now.getSeconds();\r\n        if(hour.toString().length === 1) {\r\n            hour = '0'+hour;\r\n       }\r\n       if(minute.toString().length === 1) {\r\n            minute = '0'+minute;\r\n       }\r\n       if(second.toString().length === 1) {\r\n            second = '0'+second;\r\n       }  \r\n       var dateTime = hour+':'+minute+':'+second; \r\n         return dateTime;\r\n         \r\n    }\r\n    setInterval(function(){\r\n        currentTime = getDateTime();\r\n        if(currentTime === time)\r\n        {\r\n            toast('You have late taks! If done set as completed...', {\r\n                        type: 'warning',\r\n                        autoClose: 30000,\r\n                        pauseOnHover: false,\r\n                    \r\n                    });  \r\n        }\r\n    }, 1000);\r\n\r\n    const inputTimeHandler = (e) => {\r\n            setInputTime(e.target.value);\r\n            time=e.target.value;  \r\n    };\r\n    \r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, Time: inputTime, completed: false, id: Math.random() * 1000}\r\n        ]);\r\n        setInputText(\"\");\r\n        setInputTime(\"\");\r\n    };\r\n    \r\n  \r\n    return (\r\n        <form>\r\n        <div className=\"next\"><input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" placeholder=\"Task Name\"/></div>\r\n        <div className=\"next\"><input value={inputTime} onChange={inputTimeHandler} id=\"appt-time\" type=\"time\" name=\"appt-time\" step=\"2\" className=\"todo-input\" />\r\n        </div>\r\n        <div className=\"next\"><button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button></div>\r\n    </form>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\n\r\nconst Task = ({text, Time, task, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== task.id));\r\n        toast('Task has been deleted Successfully!', {\r\n            type: 'error',\r\n            autoClose: 30000,\r\n            pauseOnHover: false,\r\n        });\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== task.id));\r\n        toast('Task has been completed Successfully!', {\r\n            type: 'success',\r\n            autoClose: 30000,\r\n            pauseOnHover: false,\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <div className=\"task\">\r\n            <li className=\"task-item\">{text}</li>\r\n            <li className=\"task-item\">{Time}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = ({todos, setTodos, filterTodos}) => {\r\n    return (\r\n        <div className=\"task-container\">\r\n        <ul className=\"task-list\">\r\n        {filterTodos.map((task) => (\r\n            <Task \r\n             setTodos={setTodos}\r\n             todos={todos}\r\n             key={task.id} \r\n             task={task}\r\n             text={task.text} \r\n             Time={task.Time} />\r\n        \r\n        ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nclass Timer extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        currentTime: ''\r\n     };\r\n  }\r\n  \r\n  componentDidMount(){\r\n      this.clock = setInterval(\r\n        () => this.Set_Current_Time(),\r\n        1000\r\n      )\r\n  }\r\n\r\n  Set_Current_Time(){\r\n      this.setState({\r\n      currentTime: new Date().toLocaleTimeString('en-US', { hour12: false })\r\n      });\r\n  }\r\n    \r\n  render() {\r\n      return (\r\n        <div>\r\n          <h2 className=\"currentTime\">Current Time: {this.state.currentTime}\r\n          </h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Timer;","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Form from './components/Form';\nimport TaskList from './components/TaskList';\nimport Timer from './components/Timer';\n\nfunction App() {\n \n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [inputTime, setInputTime] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodos, setFilterTodos] = useState([]);\n\n  //Run once when app starts\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n   //useEffect\n   useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Functions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilterTodos(todos.filter((task) => task.completed === true));\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter((task) => task.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n//Save to local\nconst saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n};\n\nconst getLocalTodos = () => {\n  if(localStorage.getItem('todos') === null){\n    localStorage.setItem('todos', JSON.stringify([]));\n  } else{\n    let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal);\n  }\n};\n\n  return (\n    <div className=\"App\">\n    <header>\n    <h1>Tasks Reminder</h1>\n    </header>\n    <Timer/>\n    <Form inputText={inputText} \n          todos={todos} \n          inputTime={inputTime}\n          setTodos={setTodos} \n          setInputText={setInputText}\n          setInputTime={setInputTime}\n          setStatus={setStatus} />\n    <TaskList setTodos={setTodos} \n          todos={todos}\n          filterTodos={filterTodos} />\n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}